networks:
  luppa-dev:
    driver: bridge
    name: luppa-dev-network

volumes:
  postgres-data:
    name: luppa-postgres-data
  redis-data:
    name: luppa-redis-data
  api-node-modules:
    name: luppa-api-node-modules
  api-app-node-modules:
    name: luppa-api-app-node-modules
  web-node-modules:
    name: luppa-web-node-modules
  web-app-node-modules:
    name: luppa-web-app-node-modules
  web-dist:
    name: luppa-web-dist

services:
  postgres:
    image: postgres:17
    container_name: luppa-postgres-dev
    networks:
      - luppa-dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-luppa_dev}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD:-scram-sha-256}
    ports:
      - '${POSTGRES_PORT:-5433}:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../infrastructure/docker/postgres:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-luppa_dev}']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  redis:
    image: redis:8-alpine
    container_name: luppa-redis-dev
    networks:
      - luppa-dev
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory ${REDIS_MAX_MEMORY:-256mb}
      --maxmemory-policy ${REDIS_EVICTION_POLICY:-allkeys-lru}
      --requirepass ${REDIS_PASSWORD:-dev_redis_password}
    ports:
      - '${REDIS_PORT:-6380}:6379'
    volumes:
      - redis-data:/data
    healthcheck:
      test:
        [
          'CMD',
          'redis-cli',
          '--no-auth-warning',
          '-a',
          '${REDIS_PASSWORD:-dev_redis_password}',
          'ping',
        ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.1'

  api:
    build:
      context: ..
      dockerfile: apps/api/Dockerfile.dev
    container_name: luppa-api-dev
    networks:
      - luppa-dev
    environment:
      NODE_ENV: development
      PORT: ${API_PORT:-3010}
      HOST: ${API_HOST:-0.0.0.0}
      LOG_LEVEL: ${LOG_LEVEL:-debug}
      # Database connection (API format)
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${POSTGRES_DB:-luppa_dev}
      DB_USER: ${POSTGRES_USER:-postgres}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
      # Keep legacy POSTGRES_ vars for compatibility
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-luppa_dev}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_password}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-dev_redis_password}
      JWT_SECRET: ${JWT_SECRET:-dev-jwt-secret-that-is-at-least-32-characters-long-for-development}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3100}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3010,http://localhost:3100,http://localhost:3000,http://localhost:5173,http://localhost:4173}
      CORS_CREDENTIALS: ${CORS_CREDENTIALS:-true}
    ports:
      - '${API_PORT:-3010}:${API_PORT:-3010}'
    volumes:
      - ../apps/api/src:/workspace/apps/api/src
      - ../apps/api/types:/workspace/apps/api/types
      - ../apps/api/tsconfig.json:/workspace/apps/api/tsconfig.json
      - ../apps/api/tsconfig.test.json:/workspace/apps/api/tsconfig.test.json
      - ../apps/api/jest.config.cjs:/workspace/apps/api/jest.config.cjs
      - ../apps/api/nodemon.json:/workspace/apps/api/nodemon.json
      - ../apps/api/logs:/workspace/apps/api/logs
      - api-node-modules:/workspace/node_modules
      - api-app-node-modules:/workspace/apps/api/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:${API_PORT:-3010}/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'

  web:
    build:
      context: ..
      dockerfile: apps/web/Dockerfile.dev
    container_name: luppa-web-dev
    networks:
      - luppa-dev
    environment:
      NODE_ENV: development
      PORT: 5173
      HOST: 0.0.0.0
      API_PORT: ${API_PORT:-3010}
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3010/api/v1}
      VITE_APP_VERSION: ${VITE_APP_VERSION:-dev}
      VITE_LOG_LEVEL: ${VITE_LOG_LEVEL:-debug}
    ports:
      - '${WEB_PORT:-5174}:5173'
    volumes:
      - ../apps/web/src:/workspace/apps/web/src
      - ../apps/web/public:/workspace/apps/web/public
      - ../apps/web/index.html:/workspace/apps/web/index.html
      - ../apps/web/vite.config.ts:/workspace/apps/web/vite.config.ts
      - ../apps/web/tsconfig.json:/workspace/apps/web/tsconfig.json
      - ../apps/web/tsconfig.node.json:/workspace/apps/web/tsconfig.node.json
      - ../apps/web/eslint.config.js:/workspace/apps/web/eslint.config.js
      - ../config:/workspace/config
      - web-node-modules:/workspace/node_modules
      - web-app-node-modules:/workspace/apps/web/node_modules
      - web-dist:/workspace/apps/web/dist
    depends_on:
      - api
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5173']
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  nginx:
    image: nginx:1.27-alpine
    container_name: luppa-nginx-dev
    networks:
      - luppa-dev
    ports:
      - '${NGINX_PORT:-3011}:80'
    volumes:
      - ../infrastructure/docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../infrastructure/docker/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - api
      - web
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.25'
        reservations:
          memory: 64M
          cpus: '0.1'
