#!/usr/bin/env sh

# Exit immediately on any command failure
set -e

# First, run lint-staged to auto-fix and format staged files
echo "üîß Auto-fixing and formatting staged files..."
npx lint-staged

# Then run additional psake checks if PowerShell is available
if command -v pwsh >/dev/null 2>&1; then
  echo "üîç Running additional psake checks..."
  
  # Detect available timeout command
  TIMEOUT_CMD=""
  if command -v timeout >/dev/null 2>&1; then
    TIMEOUT_CMD="timeout"
  elif command -v gtimeout >/dev/null 2>&1; then
    TIMEOUT_CMD="gtimeout"
  fi
  
  # Execute with or without timeout
  if [ -n "$TIMEOUT_CMD" ]; then
    # Run with timeout (10 minutes = 600 seconds)
    if ! $TIMEOUT_CMD 600 pwsh -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command "Invoke-Psake CI"; then
      EXIT_CODE=$?
      
      # Handle exit codes
      if [ $EXIT_CODE -eq 124 ]; then
        echo "‚ö†Ô∏è  Pre-commit checks timed out after 10 minutes"
        exit 1
      else
        echo "‚ùå Pre-commit checks failed with exit code $EXIT_CODE"
        exit $EXIT_CODE
      fi
    fi
  else
    # Run without timeout if timeout command is not available
    echo "‚ö†Ô∏è  No timeout command found (timeout/gtimeout), running without timeout limit..."
    if ! pwsh -NoProfile -NonInteractive -ExecutionPolicy Bypass -Command "Invoke-Psake CI"; then
      EXIT_CODE=$?
      echo "‚ùå Pre-commit checks failed with exit code $EXIT_CODE"
      exit $EXIT_CODE
    fi
  fi
fi

echo "‚úÖ Pre-commit checks completed"
