# Prometheus Alerting Rules for Luppa PLC Inventory System
# Critical alerts for production system monitoring

groups:
  - name: "system.rules"
    rules:
      # Service availability alerts
      - alert: ServiceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Service {{ $labels.job }} is down"
          description: "Service {{ $labels.job }} has been down for more than 1 minute."

      - alert: ApiServiceDown
        expr: up{job="api"} == 0
        for: 30s
        labels:
          severity: critical
        annotations:
          summary: "API service is down"
          description: "The API service has been down for more than 30 seconds."

      - alert: DatabaseConnectionFailure
        expr: up{job="postgres"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Database connection failed"
          description: "Unable to connect to PostgreSQL database for more than 1 minute."

      - alert: RedisConnectionFailure
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Redis connection failed"
          description: "Unable to connect to Redis cache for more than 1 minute."

  - name: "performance.rules"
    rules:
      # API Error Rate Alerts (Story 2.3 AC 7)
      - alert: HighAPIErrorRate
        expr: rate(http_requests_total{status_code=~"4..|5.."}[5m]) / rate(http_requests_total[5m]) * 100 > 5
        for: 5m
        labels:
          severity: warning
          service: api
        annotations:
          summary: "High API error rate detected"
          description: "API error rate is {{ $value }}% over the last 5 minutes, exceeding the 5% threshold"

      - alert: CriticalAPIErrorRate
        expr: rate(http_requests_total{status_code=~"5.."}[5m]) / rate(http_requests_total[5m]) * 100 > 10
        for: 2m
        labels:
          severity: critical
          service: api
        annotations:
          summary: "Critical API error rate detected"
          description: "API server error rate is {{ $value }}% over the last 2 minutes, exceeding the 10% threshold"

      # High response time alerts
      - alert: HighResponseTime
        expr: histogram_quantile(0.95, sum by (le, job, instance) (rate(http_request_duration_seconds_bucket[5m]))) > 1.0
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }}s for more than 5 minutes."

      - alert: HighErrorRate
        expr: rate(http_requests_total{status=~"5.."}[5m]) > 0.1
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }} requests/second for more than 2 minutes."

      # Memory usage alerts
      - alert: HighMemoryUsage
        expr: (sum by (name) (container_memory_usage_bytes) / on (name) group_left() sum by (name) (container_spec_memory_limit_bytes > 0)) > 0.8
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "High memory usage on {{ $labels.name }}"
          description: "Memory usage is {{ $value | humanizePercentage }} for more than 10 minutes."

      - alert: CriticalMemoryUsage
        expr: (sum by (name) (container_memory_usage_bytes) / on (name) group_left() sum by (name) (container_spec_memory_limit_bytes > 0)) > 0.95
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "Critical memory usage on {{ $labels.name }}"
          description: "Memory usage is {{ $value | humanizePercentage }} for more than 2 minutes."

  - name: "database.rules"
    rules:
      # Database Connection Pool Alerts (Story 2.3 AC 7)
      - alert: DatabasePoolExhaustion
        expr: database_pool_utilization > 80
        for: 5m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "Database connection pool utilization high"
          description: "Database connection pool utilization is {{ $value }}%, exceeding 80% threshold"

      - alert: DatabasePoolCritical
        expr: database_pool_utilization > 95
        for: 1m
        labels:
          severity: critical
          service: database
        annotations:
          summary: "Database connection pool near exhaustion"
          description: "Database connection pool utilization is {{ $value }}%, approaching 100%"

      # Database-specific alerts
      - alert: DatabaseHighConnections
        expr: pg_stat_database_numbackends / pg_settings_max_connections > 0.8
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High database connection usage"
          description: "Database connection usage is {{ $value | humanizePercentage }} for more than 5 minutes."

      - alert: DatabaseSlowQueries
        expr: rate(pg_stat_statements_total_time[5m]) / rate(pg_stat_statements_calls[5m]) > 1000
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Database slow queries detected"
          description: "Average query time is {{ $value }}ms for more than 10 minutes."

      - alert: DatabaseLockWait
        expr: pg_stat_activity_waiting_count > 10
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Database lock contention detected"
          description: "{{ $value }} queries are waiting for locks for more than 2 minutes."

  - name: "redis.rules"
    rules:
      # Redis Memory Usage Alerts (Story 2.3 AC 7)
      - alert: RedisHighMemoryUsage
        expr: redis_memory_used_bytes / (256 * 1024 * 1024) * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Redis memory usage high"
          description: "Redis memory usage is {{ $value }}% of 256MB limit, exceeding 80% threshold"

      - alert: RedisCriticalMemoryUsage
        expr: redis_memory_used_bytes / (256 * 1024 * 1024) * 100 > 95
        for: 2m
        labels:
          severity: critical
          service: redis
        annotations:
          summary: "Redis memory usage critical"
          description: "Redis memory usage is {{ $value }}% of 256MB limit, approaching memory limit"

      # Redis Cache Performance Alert
      - alert: LowRedisCacheHitRatio
        expr: rate(redis_operations_total{result="hit"}[5m]) / (rate(redis_operations_total{result="hit"}[5m]) + rate(redis_operations_total{result="miss"}[5m])) * 100 < 70
        for: 10m
        labels:
          severity: warning
          service: redis
        annotations:
          summary: "Low Redis cache hit ratio"
          description: "Redis cache hit ratio is {{ $value }}%, below 70% threshold for 10 minutes"

  - name: "application.rules"
    rules:
      # Application-specific alerts
      - alert: PLCConnectionFailures
        expr: increase(plc_connection_failures_total[5m]) > 5
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "PLC connection failures detected"
          description: "{{ $value }} PLC connection failures in the last 5 minutes."

      - alert: InventoryDataStale
        expr: time() - inventory_last_update_timestamp > 3600
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "Inventory data is stale"
          description: "Inventory data hasn't been updated for {{ $value | humanizeDuration }}."

      - alert: AuthenticationFailures
        expr: increase(authentication_failures_total[5m]) > 10
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "High authentication failure rate"
          description: "{{ $value }} authentication failures in the last 5 minutes."

      - alert: DiskSpaceHigh
        expr: (node_filesystem_avail_bytes / node_filesystem_size_bytes) < 0.1
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Disk space critically low on {{ $labels.mountpoint }}"
          description: "Only {{ $value | humanizePercentage }} disk space remaining."

  - name: "security.rules"
    rules:
      # Security-related alerts
      - alert: UnusualAPIUsage
        expr: rate(http_requests_total[5m]) > 100
        for: 10m
        labels:
          severity: warning
        annotations:
          summary: "Unusual API usage pattern detected"
          description: "API request rate is {{ $value }} requests/second for more than 10 minutes."

      - alert: MultipleFailedLogins
        expr: increase(failed_login_attempts_total[5m]) > 20
        for: 1m
        labels:
          severity: warning
        annotations:
          summary: "Multiple failed login attempts detected"
          description: "{{ $value }} failed login attempts in the last 5 minutes."

      - alert: SSLCertificateExpiringSoon
        expr: ssl_certificate_expiry_days < 30
        for: 0m
        labels:
          severity: warning
        annotations:
          summary: "SSL certificate expiring soon"
          description: "SSL certificate will expire in {{ $value }} days."
